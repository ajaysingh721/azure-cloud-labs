name: 1. Terraform Azure Services

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Choose the Terraform action'
        required: true
        default: 'apply'
        options:
          - 'apply'
          - 'destroy'

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.TF_STORAGE_ACCOUNT_KEY }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      TF_LOG: INFO

    defaults:
      run:
        shell: bash
        working-directory: ./iac/terraform/azure-services
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.3

      - name: Terraform format check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=main.tfplan -input=false -no-color -var="rg=${{env.AZURE_RESOURCE_GROUP}}" -var="tenant_id=${{env.ARM_TENANT_ID}}"

      - name: Terraform ${{ inputs.choice }}
        run: terraform ${{ inputs.choice }} -auto-approve --input=false -no-color -var="rg=${{env.AZURE_RESOURCE_GROUP}}" -var="tenant_id=${{env.ARM_TENANT_ID}}"
